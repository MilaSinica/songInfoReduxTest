{"ast":null,"code":"var _jsxFileName = \"/Users/ludmila/Documents/work/react-tutorial/myfirstreact/src/components/imageSearch/ImageCard.js\";\nimport React from 'react';\n\nclass ImageCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setSpans = () => {\n      const height = this.imageRef.current.clientHeight; //img height / row height for css grid system + 1 (to round to the next heighest road)\n\n      const spans = Math.ceil(height / 150) + 1;\n      this.setState({\n        spans\n      }); //if key and value are the same in ES2015 we can siply use spans instead of spans: spans\n    };\n\n    this.state = {\n      spans: 0\n    };\n    this.imageRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.imageRef.current.addEventListener('load', this.setSpans);\n  }\n\n  render() {\n    const {\n      description,\n      urls\n    } = this.props.image;\n    return React.createElement(\"div\", {\n      className: \"image-list\",\n      style: {\n        gridRowEnd: `span ${this.state.spans}`\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      ref: this.imageRef,\n      alt: description,\n      src: urls.regular,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\nexport default ImageCard;","map":{"version":3,"sources":["/Users/ludmila/Documents/work/react-tutorial/myfirstreact/src/components/imageSearch/ImageCard.js"],"names":["React","ImageCard","Component","constructor","props","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","setState","state","createRef","componentDidMount","addEventListener","render","description","urls","image","gridRowEnd","regular"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAWnBC,QAXmB,GAWR,MAAM;AACb,YAAMC,MAAM,GAAG,KAAKC,QAAL,CAAcC,OAAd,CAAsBC,YAArC,CADa,CAEb;;AACA,YAAMC,KAAK,GAAIC,IAAI,CAACC,IAAL,CAAUN,MAAM,GAAG,GAAnB,IAA0B,CAAzC;AACA,WAAKO,QAAL,CAAc;AAACH,QAAAA;AAAD,OAAd,EAJa,CAIW;AAC3B,KAhBkB;;AAEf,SAAKI,KAAL,GAAa;AACTJ,MAAAA,KAAK,EAAE;AADE,KAAb;AAGA,SAAKH,QAAL,GAAgBP,KAAK,CAACe,SAAN,EAAhB;AACH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKT,QAAL,CAAcC,OAAd,CAAsBS,gBAAtB,CAAuC,MAAvC,EAA+C,KAAKZ,QAApD;AACH;;AAQDa,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,WAAD;AAAcC,MAAAA;AAAd,QAAsB,KAAKhB,KAAL,CAAWiB,KAAvC;AACA,WACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAA4B,MAAA,KAAK,EAAE;AAACC,QAAAA,UAAU,EAAG,QAAO,KAAKR,KAAL,CAAWJ,KAAM;AAAtC,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAE,KAAKH,QAAf;AACI,MAAA,GAAG,EAAEY,WADT;AAEI,MAAA,GAAG,EAAEC,IAAI,CAACG,OAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAQH;;AA5BmC;;AA8BvC;AAED,eAAetB,SAAf","sourcesContent":["import React from 'react';\n\nclass ImageCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            spans: 0\n        }\n        this.imageRef = React.createRef();\n    }\n    componentDidMount() {\n        this.imageRef.current.addEventListener('load', this.setSpans);\n    }\n\n    setSpans = () => {\n        const height = this.imageRef.current.clientHeight;\n        //img height / row height for css grid system + 1 (to round to the next heighest road)\n        const spans =  Math.ceil(height / 150) + 1;\n        this.setState({spans}); //if key and value are the same in ES2015 we can siply use spans instead of spans: spans\n    }\n    render() {\n        const {description, urls} = this.props.image;\n        return (\n            <div className=\"image-list\" style={{gridRowEnd: `span ${this.state.spans}`}}>\n                <img ref={this.imageRef} \n                    alt={description} \n                    src={urls.regular}\n            />\n            </div>\n        )\n    }\n\n};\n\nexport default ImageCard;"]},"metadata":{},"sourceType":"module"}